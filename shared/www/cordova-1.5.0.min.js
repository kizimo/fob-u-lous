
if(typeof Cordova==="undefined"){if(typeof(DeviceInfo)!=='object'){DeviceInfo={};}
Cordova={commandQueue:[],commandQueueFlushing:false,_constructors:[],documentEventHandler:{},windowEventHandler:{}};Cordova.resources={base:true};Cordova.hasResource=function(name){return Cordova.resources[name];};Cordova.addResource=function(name){Cordova.resources[name]=true;};Cordova.available=DeviceInfo.uuid!=undefined;Cordova.addConstructor=function(func){var state=document.readyState;if((state=='loaded'||state=='complete')&&DeviceInfo.uuid!=null)
{func();}
else
{Cordova._constructors.push(func);}};(function()
{var timer=setInterval(function()
{var state=document.readyState;if((state=='loaded'||state=='complete')&&DeviceInfo.uuid!=null)
{clearInterval(timer);while(Cordova._constructors.length>0)
{var constructor=Cordova._constructors.shift();try
{constructor();}
catch(e)
{if(typeof(console['log'])=='function')
{console.log("Failed to run constructor: "+console.processMessage(e));}
else
{alert("Failed to run constructor: "+e.message);}}}
var e=document.createEvent('Events');e.initEvent('deviceready');document.dispatchEvent(e);}},1);})();Cordova.sessionKey=0;Cordova.callbackId=0;Cordova.callbacks={};Cordova.callbackStatus={NO_RESULT:0,OK:1,CLASS_NOT_FOUND_EXCEPTION:2,ILLEGAL_ACCESS_EXCEPTION:3,INSTANTIATION_EXCEPTION:4,MALFORMED_URL_EXCEPTION:5,IO_EXCEPTION:6,INVALID_ACTION:7,JSON_EXCEPTION:8,ERROR:9};Cordova.createGapBridge=function(){gapBridge=document.createElement("iframe");gapBridge.setAttribute("style","display:none;");gapBridge.setAttribute("height","0px");gapBridge.setAttribute("width","0px");gapBridge.setAttribute("frameborder","0");document.documentElement.appendChild(gapBridge);return gapBridge;}
Cordova.exec=function(){if(!Cordova.available){alert("ERROR: Attempting to call Cordova.exec()"
+" before 'deviceready'. Ignoring.");return;}
var successCallback,failCallback,service,action,actionArgs;var callbackId=null;if(typeof arguments[0]!=="string"){successCallback=arguments[0];failCallback=arguments[1];service=arguments[2];action=arguments[3];actionArgs=arguments[4];callbackId='INVALID';}else{splitCommand=arguments[0].split(".");action=splitCommand.pop();service=splitCommand.join(".");actionArgs=Array.prototype.splice.call(arguments,1);}
var command={className:service,methodName:action,arguments:[]};if(successCallback||failCallback){callbackId=service+Cordova.callbackId++;Cordova.callbacks[callbackId]={success:successCallback,fail:failCallback};}
if(callbackId!=null){command.arguments.push(callbackId);}
for(var i=0;i<actionArgs.length;++i){var arg=actionArgs[i];if(arg==undefined||arg==null){continue;}else if(typeof(arg)=='object'){command.options=arg;}else{command.arguments.push(arg);}}
Cordova.commandQueue.push(JSON.stringify(command));if(Cordova.commandQueue.length==1&&!Cordova.commandQueueFlushing){if(!Cordova.gapBridge){Cordova.gapBridge=Cordova.createGapBridge();}
Cordova.gapBridge.src="gap://ready";}}
Cordova.getAndClearQueuedCommands=function(){json=JSON.stringify(Cordova.commandQueue);Cordova.commandQueue=[];return json;}
Cordova.callbackSuccess=function(callbackId,args){if(Cordova.callbacks[callbackId]){if(args.status==Cordova.callbackStatus.OK){try{if(Cordova.callbacks[callbackId].success){Cordova.callbacks[callbackId].success(args.message);}}
catch(e){console.log("Error in success callback: "+callbackId+" = "+e);}}
if(!args.keepCallback){delete Cordova.callbacks[callbackId];}}};Cordova.callbackError=function(callbackId,args){if(Cordova.callbacks[callbackId]){try{if(Cordova.callbacks[callbackId].fail){Cordova.callbacks[callbackId].fail(args.message);}}
catch(e){console.log("Error in error callback: "+callbackId+" = "+e);}
if(!args.keepCallback){delete Cordova.callbacks[callbackId];}}};Cordova.clone=function(obj){if(!obj){return obj;}
if(obj instanceof Array){var retVal=new Array();for(var i=0;i<obj.length;++i){retVal.push(Cordova.clone(obj[i]));}
return retVal;}
if(obj instanceof Function){return obj;}
if(!(obj instanceof Object)){return obj;}
if(obj instanceof Date){return obj;}
retVal=new Object();for(i in obj){if(!(i in retVal)||retVal[i]!=obj[i]){retVal[i]=Cordova.clone(obj[i]);}}
return retVal;};Cordova.m_document_addEventListener=document.addEventListener;Cordova.m_window_addEventListener=window.addEventListener;Cordova.addWindowEventHandler=function(event,callback){Cordova.windowEventHandler[event]=callback;}
Cordova.addDocumentEventHandler=function(event,callback){Cordova.documentEventHandler[event]=callback;}
document.addEventListener=function(evt,handler,capture){var e=evt.toLowerCase();if(typeof Cordova.documentEventHandler[e]!=="undefined"){if(Cordova.documentEventHandler[e](e,handler,true)){return;}}
Cordova.m_document_addEventListener.call(document,evt,handler,capture);};window.addEventListener=function(evt,handler,capture){var e=evt.toLowerCase();if(typeof Cordova.windowEventHandler[e]!=="undefined"){if(Cordova.windowEventHandler[e](e,handler,true)){return;}}
Cordova.m_window_addEventListener.call(window,evt,handler,capture);};Cordova.m_document_removeEventListener=document.removeEventListener;Cordova.m_window_removeEventListener=window.removeEventListener;document.removeEventListener=function(evt,handler,capture){var e=evt.toLowerCase();if(typeof Cordova.documentEventHandler[e]!=="undefined"){if(Cordova.documentEventHandler[e](e,handler,false)){return;}}
Cordova.m_document_removeEventListener.call(document,evt,handler,capture);};window.removeEventListener=function(evt,handler,capture){var e=evt.toLowerCase();if(typeof Cordova.windowEventHandler[e]!=="undefined"){if(Cordova.windowEventHandler[e](e,handler,false)){return;}}
Cordova.m_window_removeEventListener.call(window,evt,handler,capture);};Cordova.fireDocumentEvent=function(type,data){var e=document.createEvent('Events');e.initEvent(type);if(data){for(var i in data){e[i]=data[i];}}
document.dispatchEvent(e);};Cordova.fireWindowEvent=function(type,data){var e=document.createEvent('Events');e.initEvent(type);if(data){for(var i in data){e[i]=data[i];}}
window.dispatchEvent(e);};Cordova.fireEvent=function(type,target,data){var e=document.createEvent('Events');e.initEvent(type);if(data){for(var i in data){e[i]=data[i];}}
target=target||document;if(target.dispatchEvent===undefined){target=document;}
target.dispatchEvent(e);};Cordova.createUUID=function(){return Cordova.UUIDcreatePart(4)+'-'+
Cordova.UUIDcreatePart(2)+'-'+
Cordova.UUIDcreatePart(2)+'-'+
Cordova.UUIDcreatePart(2)+'-'+
Cordova.UUIDcreatePart(6);};Cordova.UUIDcreatePart=function(length){var uuidpart="";for(var i=0;i<length;i++){var uuidchar=parseInt((Math.random()*256)).toString(16);if(uuidchar.length==1){uuidchar="0"+uuidchar;}
uuidpart+=uuidchar;}
return uuidpart;};};if(!Cordova.hasResource("debugconsole")){Cordova.addResource("debugconsole");var DebugConsole=function(){this.winConsole=window.console;this.logLevel=DebugConsole.INFO_LEVEL;}
DebugConsole.ALL_LEVEL=1;DebugConsole.INFO_LEVEL=1;DebugConsole.WARN_LEVEL=2;DebugConsole.ERROR_LEVEL=4;DebugConsole.NONE_LEVEL=8;DebugConsole.prototype.setLevel=function(level){this.logLevel=level;};DebugConsole.prototype.processMessage=function(message,maxDepth){if(maxDepth===undefined)maxDepth=0;if(typeof(message)!='object'){return(this.isDeprecated?"WARNING: debug object is deprecated, please use console object \n"+message:message);}else{function indent(str){return str.replace(/^/mg,"    ");}
function makeStructured(obj,depth){var str="";for(var i in obj){try{if(typeof(obj[i])=='object'&&depth<maxDepth){str+=i+":\n"+indent(makeStructured(obj[i]))+"\n";}else{str+=i+" = "+indent(String(obj[i])).replace(/^    /,"")+"\n";}}catch(e){str+=i+" = EXCEPTION: "+e.message+"\n";}}
return str;}
return("Object:\n"+makeStructured(message,maxDepth));}};DebugConsole.prototype.log=function(message,maxDepth){if(Cordova.available&&this.logLevel<=DebugConsole.INFO_LEVEL)
Cordova.exec(null,null,'org.apache.cordova.debugconsole','log',[this.processMessage(message,maxDepth),{logLevel:'INFO'}]);else
this.winConsole.log(message);};DebugConsole.prototype.warn=function(message,maxDepth){if(Cordova.available&&this.logLevel<=DebugConsole.WARN_LEVEL)
Cordova.exec(null,null,'org.apache.cordova.debugconsole','log',[this.processMessage(message,maxDepth),{logLevel:'WARN'}]);else
this.winConsole.error(message);};DebugConsole.prototype.error=function(message,maxDepth){if(Cordova.available&&this.logLevel<=DebugConsole.ERROR_LEVEL)
Cordova.exec(null,null,'org.apache.cordova.debugconsole','log',[this.processMessage(message,maxDepth),{logLevel:'ERROR'}]);else
this.winConsole.error(message);};Cordova.addConstructor(function(){window.console=new DebugConsole();});};if(!Cordova.hasResource("position")){Cordova.addResource("position");Position=function(coords,timestamp){this.coords=Coordinates.cloneFrom(coords);this.timestamp=timestamp||new Date().getTime();};Position.prototype.equals=function(other){return(this.coords&&other&&other.coords&&this.coords.latitude==other.coords.latitude&&this.coords.longitude==other.coords.longitude);};Position.prototype.clone=function()
{return new Position(this.coords?this.coords.clone():null,this.timestamp?this.timestamp:new Date().getTime());}
Coordinates=function(lat,lng,alt,acc,head,vel,altAcc){this.latitude=lat;this.longitude=lng;this.altitude=alt;this.accuracy=acc;this.heading=head;this.speed=vel;this.altitudeAccuracy=(altAcc!='undefined')?altAcc:null;};Coordinates.prototype.clone=function()
{return new Coordinates(this.latitude,this.longitude,this.altitude,this.accuracy,this.heading,this.speed,this.altitudeAccuracy);};Coordinates.cloneFrom=function(obj)
{return new Coordinates(obj.latitude,obj.longitude,obj.altitude,obj.accuracy,obj.heading,obj.speed,obj.altitudeAccuracy);};PositionOptions=function(enableHighAccuracy,timeout,maximumAge){this.enableHighAccuracy=enableHighAccuracy||false;this.timeout=timeout||10000;this.maximumAge=maximumAge||0;if(this.maximumAge<0){this.maximumAge=0;}};PositionError=function(code,message){this.code=code||0;this.message=message||"";};PositionError.UNKNOWN_ERROR=0;PositionError.PERMISSION_DENIED=1;PositionError.POSITION_UNAVAILABLE=2;PositionError.TIMEOUT=3;};if(!Cordova.hasResource("acceleration")){Cordova.addResource("acceleration");Acceleration=function(x,y,z){this.x=x;this.y=y;this.z=z;this.timestamp=new Date().getTime();}
AccelerationOptions=function(){this.timeout=10000;}};if(!Cordova.hasResource("accelerometer")){Cordova.addResource("accelerometer");Accelerometer=function()
{this.lastAcceleration=new Acceleration(0,0,0);}
Accelerometer.prototype.getCurrentAcceleration=function(successCallback,errorCallback,options){if(typeof successCallback=="function"){successCallback(this.lastAcceleration);}};Accelerometer.prototype._onAccelUpdate=function(x,y,z)
{this.lastAcceleration=new Acceleration(x,y,z);};Accelerometer.prototype.watchAcceleration=function(successCallback,errorCallback,options){var frequency=(options!=undefined&&options.frequency!=undefined)?options.frequency:10000;var updatedOptions={desiredFrequency:frequency}
Cordova.exec(null,null,"org.apache.cordova.accelerometer","start",[options]);return setInterval(function(){navigator.accelerometer.getCurrentAcceleration(successCallback,errorCallback,options);},frequency);};Accelerometer.prototype.clearWatch=function(watchId){Cordova.exec(null,null,"org.apache.cordova.accelerometer","stop",[]);clearInterval(watchId);};Accelerometer.install=function()
{if(typeof navigator.accelerometer=="undefined"){navigator.accelerometer=new Accelerometer();}};Accelerometer.installDeviceMotionHandler=function()
{if(!(window.DeviceMotionEvent==undefined)){return;}
var self=this;var devicemotionEvent='devicemotion';self.deviceMotionWatchId=null;self.deviceMotionListenerCount=0;self.deviceMotionLastEventTimestamp=0;var _addEventListener=window.addEventListener;var _removeEventListener=window.removeEventListener;var windowDispatchAvailable=!(window.dispatchEvent===undefined);var accelWin=function(acceleration){var evt=document.createEvent('Events');evt.initEvent(devicemotionEvent);evt.acceleration=null;evt.rotationRate=null;evt.accelerationIncludingGravity=acceleration;var currentTime=new Date().getTime();evt.interval=(self.deviceMotionLastEventTimestamp==0)?0:(currentTime-self.deviceMotionLastEventTimestamp);self.deviceMotionLastEventTimestamp=currentTime;if(windowDispatchAvailable){window.dispatchEvent(evt);}else{document.dispatchEvent(evt);}};var accelFail=function(){};window.addEventListener=function(){if(arguments[0]===devicemotionEvent){++(self.deviceMotionListenerCount);if(self.deviceMotionListenerCount==1){self.deviceMotionWatchId=navigator.accelerometer.watchAcceleration(accelWin,accelFail,{frequency:500});}}
if(!windowDispatchAvailable){return document.addEventListener.apply(this,arguments);}else{return _addEventListener.apply(this,arguments);}};window.removeEventListener=function(){if(arguments[0]===devicemotionEvent){--(self.deviceMotionListenerCount);if(self.deviceMotionListenerCount==0){navigator.accelerometer.clearWatch(self.deviceMotionWatchId);}}
if(!windowDispatchAvailable){return document.removeEventListener.apply(this,arguments);}else{return _removeEventListener.apply(this,arguments);}};};Cordova.addConstructor(Accelerometer.install);Cordova.addConstructor(Accelerometer.installDeviceMotionHandler);};if(!Cordova.hasResource("battery")){Cordova.addResource("battery");var Battery=function(){this._level=null;this._isPlugged=null;this._batteryListener=[];this._lowListener=[];this._criticalListener=[];};Battery.prototype.eventHandler=function(eventType,handler,add){var me=navigator.battery;if(add){if(me._batteryListener.length===0&&me._lowListener.length===0&&me._criticalListener.length===0){Cordova.exec(me._status,me._error,"org.apache.cordova.battery","start",[]);}
if(eventType==="batterystatus"){var pos=me._batteryListener.indexOf(handler);if(pos===-1){me._batteryListener.push(handler);}}else if(eventType==="batterylow"){var pos=me._lowListener.indexOf(handler);if(pos===-1){me._lowListener.push(handler);}}else if(eventType==="batterycritical"){var pos=me._criticalListener.indexOf(handler);if(pos===-1){me._criticalListener.push(handler);}}}else{if(eventType==="batterystatus"){var pos=me._batteryListener.indexOf(handler);if(pos>-1){me._batteryListener.splice(pos,1);}}else if(eventType==="batterylow"){var pos=me._lowListener.indexOf(handler);if(pos>-1){me._lowListener.splice(pos,1);}}else if(eventType==="batterycritical"){var pos=me._criticalListener.indexOf(handler);if(pos>-1){me._criticalListener.splice(pos,1);}}
if(me._batteryListener.length===0&&me._lowListener.length===0&&me._criticalListener.length===0){Cordova.exec(null,null,"org.apache.cordova.battery","stop",[]);}}};Battery.prototype._status=function(info){if(info){var me=this;if(me._level!=info.level||me._isPlugged!=info.isPlugged){Cordova.fireEvent("batterystatus",window,info);if(info.level==20||info.level==5){if(info.level==20){Cordova.fireEvent("batterylow",window,info);}
else{Cordova.fireEvent("batterycritical",window,info);}}}
me._level=info.level;me._isPlugged=info.isPlugged;}};Battery.prototype._error=function(e){console.log("Error initializing Battery: "+e);};Cordova.addConstructor(function(){if(typeof navigator.battery==="undefined"){navigator.battery=new Battery();Cordova.addWindowEventHandler("batterystatus",navigator.battery.eventHandler);Cordova.addWindowEventHandler("batterylow",navigator.battery.eventHandler);Cordova.addWindowEventHandler("batterycritical",navigator.battery.eventHandler);}});}if(!Cordova.hasResource("camera")){Cordova.addResource("camera");Camera=function(){}
Camera.DestinationType={DATA_URL:0,FILE_URI:1};Camera.prototype.DestinationType=Camera.DestinationType;Camera.PictureSourceType={PHOTOLIBRARY:0,CAMERA:1,SAVEDPHOTOALBUM:2};Camera.prototype.PictureSourceType=Camera.PictureSourceType;Camera.EncodingType={JPEG:0,PNG:1};Camera.prototype.EncodingType=Camera.EncodingType;Camera.MediaType={PICTURE:0,VIDEO:1,ALLMEDIA:2};Camera.prototype.MediaType=Camera.MediaType;Camera.prototype.getPicture=function(successCallback,errorCallback,options){if(typeof successCallback!="function"){console.log("Camera Error: successCallback is not a function");return;}
if(errorCallback&&(typeof errorCallback!="function")){console.log("Camera Error: errorCallback is not a function");return;}
Cordova.exec(successCallback,errorCallback,"org.apache.cordova.camera","getPicture",[options]);};Cordova.addConstructor(function(){if(typeof navigator.camera=="undefined")navigator.camera=new Camera();});};if(!Cordova.hasResource("device")){Cordova.addResource("device");Device=function()
{this.platform=null;this.version=null;this.name=null;this.cordova=null;this.uuid=null;try
{this.platform=DeviceInfo.platform;this.version=DeviceInfo.version;this.name=DeviceInfo.name;this.cordova=DeviceInfo.gap;this.uuid=DeviceInfo.uuid;}
catch(e)
{}
this.available=Cordova.available=this.uuid!=null;}
Cordova.addConstructor(function(){if(typeof navigator.device==="undefined"){navigator.device=window.device=new Device();}});};if(!Cordova.hasResource("capture")){Cordova.addResource("capture");function CaptureError(){this.code=null;};CaptureError.CAPTURE_INTERNAL_ERR=0;CaptureError.CAPTURE_APPLICATION_BUSY=1;CaptureError.CAPTURE_INVALID_ARGUMENT=2;CaptureError.CAPTURE_NO_MEDIA_FILES=3;CaptureError.CAPTURE_NOT_SUPPORTED=20;function Capture(){this.supportedAudioModes=[];this.supportedImageModes=[];this.supportedVideoModes=[];};Capture.prototype.captureAudio=function(successCallback,errorCallback,options){Cordova.exec(successCallback,errorCallback,"org.apache.cordova.mediacapture","captureAudio",[options]);};Capture.prototype.captureImage=function(successCallback,errorCallback,options){Cordova.exec(successCallback,errorCallback,"org.apache.cordova.mediacapture","captureImage",[options]);};Capture.prototype._castMediaFile=function(pluginResult){var mediaFiles=[];var i;for(i=0;i<pluginResult.message.length;i++){var mediaFile=new MediaFile();mediaFile.name=pluginResult.message[i].name;mediaFile.fullPath=pluginResult.message[i].fullPath;mediaFile.type=pluginResult.message[i].type;mediaFile.lastModifiedDate=pluginResult.message[i].lastModifiedDate;mediaFile.size=pluginResult.message[i].size;mediaFiles.push(mediaFile);}
pluginResult.message=mediaFiles;return pluginResult;};Capture.prototype.captureVideo=function(successCallback,errorCallback,options){Cordova.exec(successCallback,errorCallback,"org.apache.cordova.mediacapture","captureVideo",[options]);};function ConfigurationData(){this.type;this.height=0;this.width=0;};var CaptureImageOptions=function(){this.limit=1;this.mode=null;};var CaptureVideoOptions=function(){this.limit=1;this.duration=0;this.mode=null;};var CaptureAudioOptions=function(){this.limit=1;this.duration=0;this.mode=null;};function MediaFile(name,fullPath,type,lastModifiedDate,size){this.name=name||null;this.fullPath=fullPath||null;this.type=type||null;this.lastModifiedDate=lastModifiedDate||null;this.size=size||0;}
MediaFile.prototype.getFormatData=function(successCallback,errorCallback){if(typeof this.fullPath==="undefined"||this.fullPath===null){errorCallback({"code":CaptureError.CAPTURE_INVALID_ARGUMENT});}else{Cordova.exec(successCallback,errorCallback,"org.apache.cordova.mediacapture","getFormatData",[this.fullPath,this.type]);}};function MediaFileData(codecs,bitrate,height,width,duration){this.codecs=codecs||null;this.bitrate=bitrate||0;this.height=height||0;this.width=width||0;this.duration=duration||0;}
Cordova.addConstructor(function(){if(typeof navigator.device==="undefined"){navigator.device=window.device=new Device();}
if(typeof navigator.device.capture==="undefined"){navigator.device.capture=window.device.capture=new Capture();}});};if(!Cordova.hasResource("contact")){Cordova.addResource("contact");var Contact=function(id,displayName,name,nickname,phoneNumbers,emails,addresses,ims,organizations,birthday,note,photos,categories,urls){this.id=id||null;this.displayName=displayName||null;this.name=name||null;this.nickname=nickname||null;this.phoneNumbers=phoneNumbers||null;this.emails=emails||null;this.addresses=addresses||null;this.ims=ims||null;this.organizations=organizations||null;this.birthday=birthday||null;this.note=note||null;this.photos=photos||null;this.categories=categories||null;this.urls=urls||null;};Contact.prototype.convertDatesOut=function()
{var dates=new Array("birthday");for(var i=0;i<dates.length;i++){var value=this[dates[i]];if(value){if(!value instanceof Date){try{value=new Date(value);}catch(exception){value=null;}}
if(value instanceof Date){value=value.valueOf();}
this[dates[i]]=value;}}};Contact.prototype.convertDatesIn=function()
{var dates=new Array("birthday");for(var i=0;i<dates.length;i++){var value=this[dates[i]];if(value){try{this[dates[i]]=new Date(parseFloat(value));}catch(exception){console.log("exception creating date");}}}};Contact.prototype.remove=function(successCB,errorCB){if(this.id==null){var errorObj=new ContactError();errorObj.code=ContactError.UNKNOWN_ERROR;errorCB(errorObj);}
else{Cordova.exec(successCB,errorCB,"org.apache.cordova.contacts","remove",[{"contact":this}]);}};Contact.prototype.display=function(errorCB,options){if(this.id==null){if(typeof errorCB=="function"){var errorObj=new ContactError();errorObj.code=ContactError.UNKNOWN_ERROR;errorCB(errorObj);}}
else{Cordova.exec(null,errorCB,"org.apache.cordova.contacts","displayContact",[this.id,options]);}};Contact.prototype.clone=function(){var clonedContact=Cordova.clone(this);clonedContact.id=null;if(clonedContact.phoneNumbers){for(i=0;i<clonedContact.phoneNumbers.length;i++){clonedContact.phoneNumbers[i].id=null;}}
if(clonedContact.emails){for(i=0;i<clonedContact.emails.length;i++){clonedContact.emails[i].id=null;}}
if(clonedContact.addresses){for(i=0;i<clonedContact.addresses.length;i++){clonedContact.addresses[i].id=null;}}
if(clonedContact.ims){for(i=0;i<clonedContact.ims.length;i++){clonedContact.ims[i].id=null;}}
if(clonedContact.organizations){for(i=0;i<clonedContact.organizations.length;i++){clonedContact.organizations[i].id=null;}}
if(clonedContact.photos){for(i=0;i<clonedContact.photos.length;i++){clonedContact.photos[i].id=null;}}
if(clonedContact.urls){for(i=0;i<clonedContact.urls.length;i++){clonedContact.urls[i].id=null;}}
return clonedContact;};Contact.prototype.save=function(successCB,errorCB){var cloned=Cordova.clone(this);cloned.convertDatesOut();Cordova.exec(successCB,errorCB,"org.apache.cordova.contacts","save",[{"contact":cloned}]);};var ContactName=function(formatted,familyName,givenName,middle,prefix,suffix){this.formatted=formatted!="undefined"?formatted:null;this.familyName=familyName!="undefined"?familyName:null;this.givenName=givenName!="undefined"?givenName:null;this.middleName=middle!="undefined"?middle:null;this.honorificPrefix=prefix!="undefined"?prefix:null;this.honorificSuffix=suffix!="undefined"?suffix:null;};var ContactField=function(type,value,pref,id){this.type=type!="undefined"?type:null;this.value=value!="undefined"?value:null;this.pref=pref!="undefined"?pref:null;this.id=id!="undefined"?id:null;};var ContactAddress=function(pref,type,formatted,streetAddress,locality,region,postalCode,country,id){this.pref=pref!="undefined"?pref:null;this.type=type!="undefined"?type:null;this.formatted=formatted!="undefined"?formatted:null;this.streetAddress=streetAddress!="undefined"?streetAddress:null;this.locality=locality!="undefined"?locality:null;this.region=region!="undefined"?region:null;this.postalCode=postalCode!="undefined"?postalCode:null;this.country=country!="undefined"?country:null;this.id=id!="undefined"?id:null;};var ContactOrganization=function(pref,type,name,dept,title){this.pref=pref!="undefined"?pref:null;this.type=type!="undefined"?type:null;this.name=name!="undefined"?name:null;this.department=dept!="undefined"?dept:null;this.title=title!="undefined"?title:null;};var Contacts=function(){this.inProgress=false;this.records=new Array();};Contacts.prototype.find=function(fields,successCB,errorCB,options){if(successCB===null){throw new TypeError("You must specify a success callback for the find command.");}
if(fields===null||fields==="undefined"||fields.length==="undefined"||fields.length<=0){if(typeof errorCB==="function"){errorCB({"code":ContactError.INVALID_ARGUMENT_ERROR});}}else{Cordova.exec(successCB,errorCB,"org.apache.cordova.contacts","search",[{"fields":fields,"findOptions":options}]);}};Contacts.prototype._findCallback=function(pluginResult){var contacts=new Array();try{for(var i=0;i<pluginResult.message.length;i++){var newContact=navigator.contacts.create(pluginResult.message[i]);newContact.convertDatesIn();contacts.push(newContact);}
pluginResult.message=contacts;}catch(e){console.log("Error parsing contacts: "+e);}
return pluginResult;}
Contacts.prototype._contactCallback=function(pluginResult)
{var newContact=null;if(pluginResult.message){try{newContact=navigator.contacts.create(pluginResult.message);newContact.convertDatesIn();}catch(e){console.log("Error parsing contact");}}
pluginResult.message=newContact;return pluginResult;};Contacts.prototype._errCallback=function(pluginResult)
{var errorObj=new ContactError();errorObj.code=pluginResult.message;pluginResult.message=errorObj;return pluginResult;};Contacts.prototype.newContactUI=function(successCallback){Cordova.exec(successCallback,null,"org.apache.cordova.contacts","newContact",[]);};Contacts.prototype.chooseContact=function(successCallback,options){Cordova.exec(successCallback,null,"org.apache.cordova.contacts","chooseContact",options);};Contacts.prototype.create=function(properties){var i;var contact=new Contact();for(i in properties){if(contact[i]!=='undefined'){contact[i]=properties[i];}}
return contact;};var ContactFindOptions=function(filter,multiple,updatedSince){this.filter=filter||'';this.multiple=multiple||false;};var ContactError=function(){this.code=null;};ContactError.UNKNOWN_ERROR=0;ContactError.INVALID_ARGUMENT_ERROR=1;ContactError.TIMEOUT_ERROR=2;ContactError.PENDING_OPERATION_ERROR=3;ContactError.IO_ERROR=4;ContactError.NOT_SUPPORTED_ERROR=5;ContactError.PERMISSION_DENIED_ERROR=20;Cordova.addConstructor(function(){if(typeof navigator.contacts=="undefined"){navigator.contacts=new Contacts();}});};if(!Cordova.hasResource("file")){Cordova.addResource("file");FileProperties=function(filePath){this.filePath=filePath;this.size=0;this.lastModifiedDate=null;}
File=function(name,fullPath,type,lastModifiedDate,size){this.name=name||null;this.fullPath=fullPath||null;this.type=type||null;this.lastModifiedDate=lastModifiedDate||null;this.size=size||0;}
File._createEvent=function(type,target){var evt={"type":type};evt.target=target;return evt;};FileError=function(){this.code=null;}
FileError.NOT_FOUND_ERR=1;FileError.SECURITY_ERR=2;FileError.ABORT_ERR=3;FileError.NOT_READABLE_ERR=4;FileError.ENCODING_ERR=5;FileError.NO_MODIFICATION_ALLOWED_ERR=6;FileError.INVALID_STATE_ERR=7;FileError.SYNTAX_ERR=8;FileError.INVALID_MODIFICATION_ERR=9;FileError.QUOTA_EXCEEDED_ERR=10;FileError.TYPE_MISMATCH_ERR=11;FileError.PATH_EXISTS_ERR=12;FileMgr=function(){}
FileMgr.prototype.testFileExists=function(fileName,successCallback,errorCallback){Cordova.exec(successCallback,errorCallback,"org.apache.cordova.file","testFileExists",[fileName]);};FileMgr.prototype.testDirectoryExists=function(dirName,successCallback,errorCallback){Cordova.exec(successCallback,errorCallback,"org.apache.cordova.file","testDirectoryExists",[dirName]);};FileMgr.prototype.getFreeDiskSpace=function(successCallback,errorCallback){Cordova.exec(successCallback,errorCallback,"org.apache.cordova.file","getFreeDiskSpace",[]);};FileMgr.prototype.write=function(fileName,data,position,successCallback,errorCallback){Cordova.exec(successCallback,errorCallback,"org.apache.cordova.file","write",[fileName,data,position]);};FileMgr.prototype.truncate=function(fileName,size,successCallback,errorCallback){Cordova.exec(successCallback,errorCallback,"org.apache.cordova.file","truncateFile",[fileName,size]);};FileMgr.prototype.readAsText=function(fileName,encoding,successCallback,errorCallback){Cordova.exec(successCallback,errorCallback,"org.apache.cordova.file","readFile",[fileName,encoding]);};FileMgr.prototype.readAsDataURL=function(fileName,successCallback,errorCallback){Cordova.exec(successCallback,errorCallback,"org.apache.cordova.file","readAsDataURL",[fileName]);};Cordova.addConstructor(function(){if(typeof navigator.fileMgr==="undefined"){navigator.fileMgr=new FileMgr();}});FileReader=function(){this.fileName="";this.readyState=0;this.result=null;this.error=null;this.onloadstart=null;this.onprogress=null;this.onload=null;this.onerror=null;this.onloadend=null;this.onabort=null;}
FileReader.EMPTY=0;FileReader.LOADING=1;FileReader.DONE=2;FileReader.prototype.abort=function(){var evt;this.readyState=FileReader.DONE;this.result=null;var error=new FileError();error.code=error.ABORT_ERR;this.error=error;if(typeof this.onerror==="function"){evt=File._createEvent("error",this);this.onerror(evt);}
if(typeof this.onabort==="function"){evt=File._createEvent("abort",this);this.onabort(evt);}
if(typeof this.onloadend==="function"){evt=File._createEvent("loadend",this);this.onloadend(evt);}};FileReader.prototype.readAsText=function(file,encoding){this.fileName="";if(typeof file.fullPath==="undefined"){this.fileName=file;}else{this.fileName=file.fullPath;}
this.readyState=FileReader.LOADING;if(typeof this.onloadstart==="function"){var evt=File._createEvent("loadstart",this);this.onloadstart(evt);}
var enc=encoding?encoding:"UTF-8";var me=this;navigator.fileMgr.readAsText(this.fileName,enc,function(r){var evt;if(me.readyState===FileReader.DONE){return;}
me.result=decodeURIComponent(r);if(typeof me.onload==="function"){evt=File._createEvent("load",me);me.onload(evt);}
me.readyState=FileReader.DONE;if(typeof me.onloadend==="function"){evt=File._createEvent("loadend",me);me.onloadend(evt);}},function(e){var evt;if(me.readyState===FileReader.DONE){return;}
me.error=e;if(typeof me.onerror==="function"){evt=File._createEvent("error",me);me.onerror(evt);}
me.readyState=FileReader.DONE;if(typeof me.onloadend==="function"){evt=File._createEvent("loadend",me);me.onloadend(evt);}});};FileReader.prototype.readAsDataURL=function(file){this.fileName="";if(typeof file.fullPath==="undefined"){this.fileName=file;}else{this.fileName=file.fullPath;}
this.readyState=FileReader.LOADING;if(typeof this.onloadstart==="function"){var evt=File._createEvent("loadstart",this);this.onloadstart(evt);}
var me=this;navigator.fileMgr.readAsDataURL(this.fileName,function(r){var evt;if(me.readyState===FileReader.DONE){return;}
me.result=r;if(typeof me.onload==="function"){evt=File._createEvent("load",me);me.onload(evt);}
me.readyState=FileReader.DONE;if(typeof me.onloadend==="function"){evt=File._createEvent("loadend",me);me.onloadend(evt);}},function(e){var evt;if(me.readyState===FileReader.DONE){return;}
me.error=e;if(typeof me.onerror==="function"){evt=File._createEvent("error",me);me.onerror(evt);}
me.readyState=FileReader.DONE;if(typeof me.onloadend==="function"){evt=File._createEvent("loadend",me);me.onloadend(evt);}});};FileReader.prototype.readAsBinaryString=function(file){this.fileName=file;};FileReader.prototype.readAsArrayBuffer=function(file){this.fileName=file;};FileWriter=function(file){this.fileName="";this.length=0;if(file){this.fileName=file.fullPath||file;this.length=file.size||0;}
this.position=0;this.readyState=0;this.result=null;this.error=null;this.onwritestart=null;this.onprogress=null;this.onwrite=null;this.onwriteend=null;this.onabort=null;this.onerror=null;}
FileWriter.INIT=0;FileWriter.WRITING=1;FileWriter.DONE=2;FileWriter.prototype.abort=function(){if(this.readyState===FileWriter.DONE||this.readyState===FileWriter.INIT){throw FileError.INVALID_STATE_ERR;}
var error=new FileError(),evt;error.code=error.ABORT_ERR;this.error=error;if(typeof this.onerror==="function"){evt=File._createEvent("error",this);this.onerror(evt);}
if(typeof this.onabort==="function"){evt=File._createEvent("abort",this);this.onabort(evt);}
this.readyState=FileWriter.DONE;if(typeof this.onwriteend=="function"){evt=File._createEvent("writeend",this);this.onwriteend(evt);}};FileWriter.prototype.writeAsText=function(file,text,bAppend){if(this.readyState===FileWriter.WRITING){throw FileError.INVALID_STATE_ERR;}
if(bAppend!==true){bAppend=false;}
this.fileName=file;this.readyState=FileWriter.WRITING;var me=this;if(typeof me.onwritestart==="function"){var evt=File._createEvent("writestart",me);me.onwritestart(evt);}
navigator.fileMgr.writeAsText(file,text,bAppend,function(r){var evt;if(me.readyState===FileWriter.DONE){return;}
me.result=r;if(typeof me.onwrite==="function"){evt=File._createEvent("write",me);me.onwrite(evt);}
me.readyState=FileWriter.DONE;if(typeof me.onwriteend==="function"){evt=File._createEvent("writeend",me);me.onwriteend(evt);}},function(e){var evt;if(me.readyState===FileWriter.DONE){return;}
me.error=e;if(typeof me.onerror==="function"){evt=File._createEvent("error",me);me.onerror(evt);}
me.readyState=FileWriter.DONE;if(typeof me.onwriteend==="function"){evt=File._createEvent("writeend",me);me.onwriteend(evt);}});};FileWriter.prototype.write=function(text){if(this.readyState===FileWriter.WRITING){throw FileError.INVALID_STATE_ERR;}
this.readyState=FileWriter.WRITING;var me=this;if(typeof me.onwritestart==="function"){var evt=File._createEvent("writestart",me);me.onwritestart(evt);}
navigator.fileMgr.write(this.fileName,text,this.position,function(r){var evt;if(me.readyState===FileWriter.DONE){return;}
me.position+=r;me.length=me.position;if(typeof me.onwrite==="function"){evt=File._createEvent("write",me);me.onwrite(evt);}
me.readyState=FileWriter.DONE;if(typeof me.onwriteend==="function"){evt=File._createEvent("writeend",me);me.onwriteend(evt);}},function(e){var evt;if(me.readyState===FileWriter.DONE){return;}
me.error=e;if(typeof me.onerror==="function"){evt=File._createEvent("error",me);me.onerror(evt);}
me.readyState=FileWriter.DONE;if(typeof me.onwriteend==="function"){evt=File._createEvent("writeend",me);me.onwriteend(evt);}});};FileWriter.prototype.seek=function(offset){if(this.readyState===FileWriter.WRITING){throw FileError.INVALID_STATE_ERR;}
if(!offset){return;}
if(offset<0){this.position=Math.max(offset+this.length,0);}
else if(offset>this.length){this.position=this.length;}
else{this.position=offset;}};FileWriter.prototype.truncate=function(size){if(this.readyState===FileWriter.WRITING){throw FileError.INVALID_STATE_ERR;}
this.readyState=FileWriter.WRITING;var me=this;if(typeof me.onwritestart==="function"){var evt=File._createEvent("writestart",me);me.onwritestart(evt);}
navigator.fileMgr.truncate(this.fileName,size,function(r){var evt;if(me.readyState===FileWriter.DONE){return;}
me.length=r;me.position=Math.min(me.position,r);if(typeof me.onwrite==="function"){evt=File._createEvent("write",me);me.onwrite(evt);}
me.readyState=FileWriter.DONE;if(typeof me.onwriteend==="function"){evt=File._createEvent("writeend",me);me.onwriteend(evt);}},function(e){var evt;if(me.readyState===FileWriter.DONE){return;}
me.error=e;if(typeof me.onerror==="function"){evt=File._createEvent("error",me);me.onerror(evt);}
me.readyState=FileWriter.DONE;if(typeof me.onwriteend==="function"){evt=File._createEvent("writeend",me);me.onwriteend(evt);}});};LocalFileSystem=function(){};LocalFileSystem.TEMPORARY=0;LocalFileSystem.PERSISTENT=1;LocalFileSystem.RESOURCE=2;LocalFileSystem.APPLICATION=3;LocalFileSystem.prototype.requestFileSystem=function(type,size,successCallback,errorCallback){if(type<0||type>3){if(typeof errorCallback=="function"){errorCallback({"code":FileError.SYNTAX_ERR});}}
else{Cordova.exec(successCallback,errorCallback,"org.apache.cordova.file","requestFileSystem",[type,size]);}};LocalFileSystem.prototype.resolveLocalFileSystemURI=function(uri,successCallback,errorCallback){Cordova.exec(successCallback,errorCallback,"org.apache.cordova.file","resolveLocalFileSystemURI",[uri]);};LocalFileSystem.prototype._castFS=function(pluginResult){var entry=null;entry=new DirectoryEntry();entry.isDirectory=pluginResult.message.root.isDirectory;entry.isFile=pluginResult.message.root.isFile;entry.name=pluginResult.message.root.name;entry.fullPath=pluginResult.message.root.fullPath;pluginResult.message.root=entry;return pluginResult;}
LocalFileSystem.prototype._castEntry=function(pluginResult){var entry=null;if(pluginResult.message.isDirectory){entry=new DirectoryEntry();}
else if(pluginResult.message.isFile){entry=new FileEntry();}
entry.isDirectory=pluginResult.message.isDirectory;entry.isFile=pluginResult.message.isFile;entry.name=pluginResult.message.name;entry.fullPath=pluginResult.message.fullPath;pluginResult.message=entry;return pluginResult;}
LocalFileSystem.prototype._castEntries=function(pluginResult){var entries=pluginResult.message;var retVal=[];for(i=0;i<entries.length;i++){retVal.push(window.localFileSystem._createEntry(entries[i]));}
pluginResult.message=retVal;return pluginResult;}
LocalFileSystem.prototype._createEntry=function(castMe){var entry=null;if(castMe.isDirectory){entry=new DirectoryEntry();}
else if(castMe.isFile){entry=new FileEntry();}
entry.isDirectory=castMe.isDirectory;entry.isFile=castMe.isFile;entry.name=castMe.name;entry.fullPath=castMe.fullPath;return entry;}
LocalFileSystem.prototype._castDate=function(pluginResult){if(pluginResult.message.modificationTime){var metadataObj=new Metadata();metadataObj.modificationTime=new Date(pluginResult.message.modificationTime);pluginResult.message=metadataObj;}
else if(pluginResult.message.lastModifiedDate){var file=new File();file.size=pluginResult.message.size;file.type=pluginResult.message.type;file.name=pluginResult.message.name;file.fullPath=pluginResult.message.fullPath;file.lastModifiedDate=new Date(pluginResult.message.lastModifiedDate);pluginResult.message=file;}
return pluginResult;}
LocalFileSystem.prototype._castError=function(pluginResult){var fileError=new FileError();fileError.code=pluginResult.message;pluginResult.message=fileError;return pluginResult;}
Metadata=function(){this.modificationTime=null;};Flags=function(create,exclusive){this.create=create||false;this.exclusive=exclusive||false;};FileSystem=function(){this.name=null;this.root=null;};DirectoryEntry=function(){this.isFile=false;this.isDirectory=true;this.name=null;this.fullPath=null;this.filesystem=null;};DirectoryEntry.prototype.copyTo=function(parent,newName,successCallback,errorCallback){Cordova.exec(successCallback,errorCallback,"org.apache.cordova.file","copyTo",[this.fullPath,parent,newName]);};DirectoryEntry.prototype.getMetadata=function(successCallback,errorCallback){Cordova.exec(successCallback,errorCallback,"org.apache.cordova.file","getMetadata",[this.fullPath]);};DirectoryEntry.prototype.getParent=function(successCallback,errorCallback){Cordova.exec(successCallback,errorCallback,"org.apache.cordova.file","getParent",[this.fullPath]);};DirectoryEntry.prototype.moveTo=function(parent,newName,successCallback,errorCallback){Cordova.exec(successCallback,errorCallback,"org.apache.cordova.file","moveTo",[this.fullPath,parent,newName]);};DirectoryEntry.prototype.remove=function(successCallback,errorCallback){Cordova.exec(successCallback,errorCallback,"org.apache.cordova.file","remove",[this.fullPath]);};DirectoryEntry.prototype.toURL=function(mimeType,successCallback,errorCallback){return"file://localhost"+this.fullPath;};DirectoryEntry.prototype.toURI=function(mimeType,successCallback,errorCallback){console.log("DEPRECATED: Update your code to use 'toURL'");return"file://localhost"+this.fullPath;};DirectoryEntry.prototype.createReader=function(successCallback,errorCallback){return new DirectoryReader(this.fullPath);};DirectoryEntry.prototype.getDirectory=function(path,options,successCallback,errorCallback){Cordova.exec(successCallback,errorCallback,"org.apache.cordova.file","getDirectory",[this.fullPath,path,options]);};DirectoryEntry.prototype.getFile=function(path,options,successCallback,errorCallback){Cordova.exec(successCallback,errorCallback,"org.apache.cordova.file","getFile",[this.fullPath,path,options]);};DirectoryEntry.prototype.removeRecursively=function(successCallback,errorCallback){Cordova.exec(successCallback,errorCallback,"org.apache.cordova.file","removeRecursively",[this.fullPath]);};DirectoryReader=function(fullPath){this.fullPath=fullPath||null;};DirectoryReader.prototype.readEntries=function(successCallback,errorCallback){Cordova.exec(successCallback,errorCallback,"org.apache.cordova.file","readEntries",[this.fullPath]);}
FileEntry=function(){this.isFile=true;this.isDirectory=false;this.name=null;this.fullPath=null;this.filesystem=null;};FileEntry.prototype.copyTo=function(parent,newName,successCallback,errorCallback){Cordova.exec(successCallback,errorCallback,"org.apache.cordova.file","copyTo",[this.fullPath,parent,newName]);};FileEntry.prototype.getMetadata=function(successCallback,errorCallback){Cordova.exec(successCallback,errorCallback,"org.apache.cordova.file","getMetadata",[this.fullPath]);};FileEntry.prototype.getParent=function(successCallback,errorCallback){Cordova.exec(successCallback,errorCallback,"org.apache.cordova.file","getParent",[this.fullPath]);};FileEntry.prototype.moveTo=function(parent,newName,successCallback,errorCallback){Cordova.exec(successCallback,errorCallback,"org.apache.cordova.file","moveTo",[this.fullPath,parent,newName]);};FileEntry.prototype.remove=function(successCallback,errorCallback){Cordova.exec(successCallback,errorCallback,"org.apache.cordova.file","remove",[this.fullPath]);};FileEntry.prototype.toURL=function(mimeType,successCallback,errorCallback){return"file://localhost"+this.fullPath;};FileEntry.prototype.toURI=function(mimeType,successCallback,errorCallback){console.log("DEPRECATED: Update your code to use 'toURL'");return"file://localhost"+this.fullPath;};FileEntry.prototype.createWriter=function(successCallback,errorCallback){this.file(function(filePointer){var writer=new FileWriter(filePointer);if(writer.fileName==null||writer.fileName==""){if(typeof errorCallback=="function"){errorCallback({"code":FileError.INVALID_STATE_ERR});}}
if(typeof successCallback=="function"){successCallback(writer);}},errorCallback);};FileEntry.prototype.file=function(successCallback,errorCallback){Cordova.exec(successCallback,errorCallback,"org.apache.cordova.file","getFileMetadata",[this.fullPath]);};Cordova.addConstructor(function(){var pgLocalFileSystem=new LocalFileSystem();if(typeof window.localFileSystem=="undefined")window.localFileSystem=pgLocalFileSystem;if(typeof window.requestFileSystem=="undefined")window.requestFileSystem=pgLocalFileSystem.requestFileSystem;if(typeof window.resolveLocalFileSystemURI=="undefined")window.resolveLocalFileSystemURI=pgLocalFileSystem.resolveLocalFileSystemURI;});};if(!Cordova.hasResource("filetransfer")){Cordova.addResource("filetransfer");FileTransfer=function(){}
FileUploadResult=function(){this.bytesSent=0;this.responseCode=null;this.response=null;}
FileTransferError=function(errorCode){this.code=errorCode||null;}
FileTransferError.FILE_NOT_FOUND_ERR=1;FileTransferError.INVALID_URL_ERR=2;FileTransferError.CONNECTION_ERR=3;FileTransfer.prototype.upload=function(filePath,server,successCallback,errorCallback,options){if(!options.params){options.params={};}
options.filePath=filePath;options.server=server;if(!options.fileKey){options.fileKey='file';}
if(!options.fileName){options.fileName='image.jpg';}
if(!options.mimeType){options.mimeType='image/jpeg';}
if(typeof successCallback!="function"){console.log("FileTransfer Error: successCallback is not a function");return;}
if(errorCallback&&(typeof errorCallback!="function")){console.log("FileTransfer Error: errorCallback is not a function");return;}
Cordova.exec(successCallback,errorCallback,'org.apache.cordova.filetransfer','upload',[options]);};FileTransfer.prototype._castTransferError=function(pluginResult){var fileError=new FileTransferError(pluginResult.message);pluginResult.message=fileError;return pluginResult;}
FileTransfer.prototype._castUploadResult=function(pluginResult){var result=new FileUploadResult();result.bytesSent=pluginResult.message.bytesSent;result.responseCode=pluginResult.message.responseCode;result.response=decodeURIComponent(pluginResult.message.response);pluginResult.message=result;return pluginResult;}
FileTransfer.prototype.download=function(source,target,successCallback,errorCallback){Cordova.exec(successCallback,errorCallback,'org.apache.cordova.filetransfer','download',[source,target]);};FileUploadOptions=function(fileKey,fileName,mimeType,params){this.fileKey=fileKey||null;this.fileName=fileName||null;this.mimeType=mimeType||null;this.params=params||null;}
Cordova.addConstructor(function(){if(typeof navigator.fileTransfer=="undefined")navigator.fileTransfer=new FileTransfer();});};if(!Cordova.hasResource("geolocation")){Cordova.addResource("geolocation");Geolocation=function(){this.lastPosition=null;this.listener=null;this.timeoutTimerId=0;};Geolocation.prototype.getCurrentPosition=function(successCallback,errorCallback,options)
{var win=successCallback;if(!win||typeof(win)!='function')
{win=function(position){};}
var fail=errorCallback;if(!fail||typeof(fail)!='function')
{fail=function(positionError){};}
var self=this;var totalTime=0;var timeoutTimerId;var params=new PositionOptions();if(options)
{if(options.maximumAge)
{if(this.lastPosition)
{var now=new Date().getTime();if((now-this.lastPosition.timestamp)<options.maximumAge)
{win(this.lastPosition);return;}}
params.maximumAge=options.maximumAge;}
if(options.enableHighAccuracy)
{params.enableHighAccuracy=(options.enableHighAccuracy==true);}
if(options.timeout)
{params.timeout=options.timeout;}}
var successListener=win;var failListener=fail;if(!this.locationRunning)
{successListener=function(position)
{win(position);self.stop();};errorListener=function(positionError)
{fail(positionError);self.stop();};}
this.listener={"success":successListener,"fail":failListener};this.start(params);var onTimeout=function()
{self.setError(new PositionError(PositionError.TIMEOUT,"Geolocation Error: Timeout."));};clearTimeout(this.timeoutTimerId);this.timeoutTimerId=setTimeout(onTimeout,params.timeout);};Geolocation.prototype.watchPosition=function(successCallback,errorCallback,options){var self=this;var params=new PositionOptions();if(options)
{if(options.maximumAge){params.maximumAge=options.maximumAge;}
if(options.enableHighAccuracy){params.enableHighAccuracy=options.enableHighAccuracy;}
if(options.timeout){params.timeout=options.timeout;}}
var that=this;var lastPos=that.lastPosition?that.lastPosition.clone():null;var intervalFunction=function(){var filterFun=function(position){if(lastPos==null||!position.equals(lastPos)){successCallback(position);}
lastPos=position.clone();};that.getCurrentPosition(filterFun,errorCallback,params);};intervalFunction();return setInterval(intervalFunction,params.timeout);};Geolocation.prototype.clearWatch=function(watchId){clearInterval(watchId);};Geolocation.prototype.setLocation=function(position)
{var _position=new Position(position.coords,position.timestamp);if(this.timeoutTimerId)
{clearTimeout(this.timeoutTimerId);this.timeoutTimerId=0;}
this.lastError=null;this.lastPosition=_position;if(this.listener&&typeof(this.listener.success)=='function')
{this.listener.success(_position);}
this.listener=null;};Geolocation.prototype.setError=function(error)
{var _error=new PositionError(error.code,error.message);this.locationRunning=false
if(this.timeoutTimerId)
{clearTimeout(this.timeoutTimerId);this.timeoutTimerId=0;}
this.lastError=_error;if(this.listener&&typeof(this.listener.fail)=='function')
{this.listener.fail(_error);}
this.listener=null;};Geolocation.prototype.start=function(positionOptions)
{Cordova.exec(null,null,"org.apache.cordova.geolocation","startLocation",[positionOptions]);this.locationRunning=true};Geolocation.prototype.stop=function()
{Cordova.exec(null,null,"org.apache.cordova.geolocation","stopLocation",[]);this.locationRunning=false};Cordova.addConstructor(function()
{if(typeof navigator._geo=="undefined")
{var __proxyObj=function(origObj,proxyObj,funkList)
{var replaceFunk=function(org,proxy,fName)
{org[fName]=function()
{return proxy[fName].apply(proxy,arguments);};};for(var v in funkList){replaceFunk(origObj,proxyObj,funkList[v]);}}
navigator._geo=new Geolocation();__proxyObj(navigator.geolocation,navigator._geo,["setLocation","getCurrentPosition","watchPosition","clearWatch","setError","start","stop"]);}});};if(!Cordova.hasResource("compass")){Cordova.addResource("compass");CompassError=function(){this.code=null;};CompassError.COMPASS_INTERNAL_ERR=0;CompassError.COMPASS_NOT_SUPPORTED=20;CompassHeading=function(){this.magneticHeading=null;this.trueHeading=null;this.headingAccuracy=null;this.timestamp=null;}
Compass=function(){this.timers={};};Compass.prototype.getCurrentHeading=function(successCallback,errorCallback,options){if(typeof successCallback!=="function"){console.log("Compass Error: successCallback is not a function");return;}
if(errorCallback&&(typeof errorCallback!=="function")){console.log("Compass Error: errorCallback is not a function");return;}
Cordova.exec(successCallback,errorCallback,"org.apache.cordova.geolocation","getCurrentHeading",[]);};Compass.prototype.watchHeading=function(successCallback,errorCallback,options)
{var frequency=(options!==undefined)?options.frequency:100;if(typeof successCallback!=="function"){console.log("Compass Error: successCallback is not a function");return;}
if(errorCallback&&(typeof errorCallback!=="function")){console.log("Compass Error: errorCallback is not a function");return;}
var id=Cordova.createUUID();navigator.compass.timers[id]=setInterval(function(){Cordova.exec(successCallback,errorCallback,"org.apache.cordova.geolocation","getCurrentHeading",[{repeats:1}]);},frequency);return id;};Compass.prototype.clearWatch=function(id)
{if(id&&navigator.compass.timers[id]){clearInterval(navigator.compass.timers[id]);delete navigator.compass.timers[id];}
if(navigator.compass.timers.length==0){Cordova.exec(null,null,"org.apache.cordova.geolocation","stopHeading",[]);}};Compass.prototype.watchHeadingFilter=function(successCallback,errorCallback,options)
{if(options===undefined||options.filter===undefined){console.log("Compass Error:  options.filter not specified");return;}
if(typeof successCallback!=="function"){console.log("Compass Error: successCallback is not a function");return;}
if(errorCallback&&(typeof errorCallback!=="function")){console.log("Compass Error: errorCallback is not a function");return;}
Cordova.exec(successCallback,errorCallback,"org.apache.cordova.geolocation","watchHeadingFilter",[options]);}
Compass.prototype.clearWatchFilter=function()
{Cordova.exec(null,null,"org.apache.cordova.geolocation","stopHeading",[]);};Cordova.addConstructor(function()
{if(typeof navigator.compass=="undefined")
{navigator.compass=new Compass();}});};if(!Cordova.hasResource("media")){Cordova.addResource("media");Cordova.mediaObjects={};Cordova.Media=function(){};Cordova.Media.getMediaObject=function(id){return Cordova.mediaObjects[id];};Cordova.Media.onStatus=function(id,msg,value){var media=Cordova.mediaObjects[id];if(msg==Media.MEDIA_STATE){if(value==Media.MEDIA_STOPPED){if(media.successCallback){media.successCallback();}}
if(media.statusCallback){media.statusCallback(value);}}
else if(msg==Media.MEDIA_DURATION){media._duration=value;}
else if(msg==Media.MEDIA_ERROR){if(media.errorCallback){media.errorCallback(value);}}
else if(msg==Media.MEDIA_POSITION){media._position=value;}};Media=function(src,successCallback,errorCallback,statusCallback,positionCallback){if(successCallback&&(typeof successCallback!="function")){console.log("Media Error: successCallback is not a function");return;}
if(errorCallback&&(typeof errorCallback!="function")){console.log("Media Error: errorCallback is not a function");return;}
if(statusCallback&&(typeof statusCallback!="function")){console.log("Media Error: statusCallback is not a function");return;}
if(positionCallback&&(typeof positionCallback!="function")){console.log("Media Error: positionCallback is not a function");return;}
this.id=Cordova.createUUID();Cordova.mediaObjects[this.id]=this;this.src=src;this.successCallback=successCallback;this.errorCallback=errorCallback;this.statusCallback=statusCallback;this.positionCallback=positionCallback;this._duration=-1;this._position=-1;};Media.MEDIA_STATE=1;Media.MEDIA_DURATION=2;Media.MEDIA_POSITION=3;Media.MEDIA_ERROR=9;Media.MEDIA_NONE=0;Media.MEDIA_STARTING=1;Media.MEDIA_RUNNING=2;Media.MEDIA_PAUSED=3;Media.MEDIA_STOPPED=4;Media.MEDIA_MSG=["None","Starting","Running","Paused","Stopped"];MediaError=function(){this.code=null,this.message="";}
MediaError.MEDIA_ERR_ABORTED=1;MediaError.MEDIA_ERR_NETWORK=2;MediaError.MEDIA_ERR_DECODE=3;MediaError.MEDIA_ERR_NONE_SUPPORTED=4;Media.prototype.play=function(options){Cordova.exec(null,null,"org.apache.cordova.media","play",[this.id,this.src,options]);};Media.prototype.stop=function(){Cordova.exec(null,null,"org.apache.cordova.media","stop",[this.id,this.src]);};Media.prototype.pause=function(){Cordova.exec(null,null,"org.apache.cordova.media","pause",[this.id,this.src]);};Media.prototype.seekTo=function(milliseconds){Cordova.exec(null,null,"org.apache.cordova.media","seekTo",[this.id,this.src,milliseconds]);};Media.prototype.getDuration=function(){return this._duration;};Media.prototype.getCurrentPosition=function(successCB,errorCB){var errCallback=(errorCB==undefined||errorCB==null)?null:errorCB;Cordova.exec(successCB,errorCB,"org.apache.cordova.media","getCurrentPosition",[this.id,this.src]);};Media.prototype.prepare=function(successCB,errorCB){Cordova.exec(successCB,errorCB,"org.apache.cordova.media","prepare",[this.id,this.src]);}
Media.prototype.startRecord=function(){Cordova.exec(null,null,"org.apache.cordova.media","startAudioRecord",[this.id,this.src]);};Media.prototype.stopRecord=function(){Cordova.exec(null,null,"org.apache.cordova.media","stopAudioRecord",[this.id,this.src]);};Media.prototype.release=function(){Cordova.exec(null,null,"org.apache.cordova.media","release",[this.id,this.src]);};};if(!Cordova.hasResource("notification")){Cordova.addResource("notification");Notification=function(){};Notification.prototype.alert=function(message,completeCallback,title,buttonLabel){var _title=title;if(title==null||typeof title==='undefined'){_title="Alert";}
var _buttonLabel=(buttonLabel||"OK");Cordova.exec(completeCallback,null,"org.apache.cordova.notification","alert",[message,{"title":_title,"buttonLabel":_buttonLabel}]);};Notification.prototype.confirm=function(message,resultCallback,title,buttonLabels){var _title=(title||"Confirm");var _buttonLabels=(buttonLabels||"OK,Cancel");this.alert(message,resultCallback,_title,_buttonLabels);};Notification.prototype.blink=function(count,colour){};Notification.prototype.vibrate=function(mills){Cordova.exec(null,null,"org.apache.cordova.notification","vibrate",[]);};Notification.prototype.beep=function(count,volume){new Media('beep.wav').play();};Cordova.addConstructor(function(){if(typeof navigator.notification=="undefined")navigator.notification=new Notification();});};if(!Cordova.hasResource("orientation")){Cordova.addResource("orientation");Orientation=function(){this.currentOrientation=null;}
Orientation.prototype.setOrientation=function(orientation){Orientation.currentOrientation=orientation;var e=document.createEvent('Events');e.initEvent('orientationChanged','false','false');e.orientation=orientation;document.dispatchEvent(e);};Orientation.prototype.getCurrentOrientation=function(successCallback,errorCallback){};Orientation.prototype.watchOrientation=function(successCallback,errorCallback){this.getCurrentPosition(successCallback,errorCallback);return setInterval(function(){navigator.orientation.getCurrentOrientation(successCallback,errorCallback);},10000);};Orientation.prototype.clearWatch=function(watchId){clearInterval(watchId);};Orientation.install=function()
{if(typeof navigator.orientation=="undefined"){navigator.orientation=new Orientation();}
var windowDispatchAvailable=!(window.dispatchEvent===undefined);if(windowDispatchAvailable){return;}
var self=this;var orientationchangeEvent='orientationchange';var newOrientationchangeEvent='orientationchange_pg';var _addEventListener=window.addEventListener;var _removeEventListener=window.removeEventListener;window.onorientationchange=function(){Cordova.fireEvent(newOrientationchangeEvent,window);}
window.addEventListener=function(){if(arguments[0]===orientationchangeEvent){arguments[0]=newOrientationchangeEvent;}
if(!windowDispatchAvailable){return document.addEventListener.apply(this,arguments);}else{return _addEventListener.apply(this,arguments);}};window.removeEventListener=function(){if(arguments[0]===orientationchangeEvent){arguments[0]=newOrientationchangeEvent;}
if(!windowDispatchAvailable){return document.removeEventListener.apply(this,arguments);}else{return _removeEventListener.apply(this,arguments);}};};Cordova.addConstructor(Orientation.install);};if(!Cordova.hasResource("sms")){Cordova.addResource("sms");Sms=function(){}
Sms.prototype.send=function(number,message,successCallback,errorCallback,options){};Cordova.addConstructor(function(){if(typeof navigator.sms=="undefined")navigator.sms=new Sms();});};if(!Cordova.hasResource("telephony")){Cordova.addResource("telephony");Telephony=function(){}
Telephony.prototype.call=function(number){};Cordova.addConstructor(function(){if(typeof navigator.telephony=="undefined")navigator.telephony=new Telephony();});};if(!Cordova.hasResource("network")){Cordova.addResource("network");Connection=function(){this.type=Connection.UNKNOWN;try{this.type=DeviceInfo.connection.type;}
catch(e){}};Connection.UNKNOWN="unknown";Connection.ETHERNET="ethernet";Connection.WIFI="wifi";Connection.CELL_2G="2g";Connection.CELL_3G="3g";Connection.CELL_4G="4g";Connection.NONE="none";Cordova.addConstructor(function(){if(typeof navigator.network=="undefined")navigator.network={};if(typeof navigator.network.connection=="undefined")navigator.network.connection=new Connection();});};if(!Cordova.hasResource("splashscreen")){Cordova.addResource("splashscreen");SplashScreen=function(){};SplashScreen.prototype.show=function(){Cordova.exec(null,null,"org.apache.cordova.splashscreen","show",[]);};SplashScreen.prototype.hide=function(){Cordova.exec(null,null,"org.apache.cordova.splashscreen","hide",[]);};Cordova.addConstructor(function(){if(typeof navigator.splashscreen=="undefined")navigator.splashscreen=new SplashScreen();});};